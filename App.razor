@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using MenShopBlazor.Services.Account
@using MenShopBlazor.Services.Auth
@using MenShopBlazor.Shared
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ISnackbar Snackbar
@inject IAccountService AccountService
@implements IDisposable

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <UnauthorizedHandler />
                </NotAuthorized>
            </AuthorizeRouteView>

        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Không tìm thấy trang.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private DotNetObjectReference<App>? dotNetRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetRef = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("onBeforeUnloadLogout", dotNetRef);
        }
    }

    [JSInvokable("LogoutFromJS")]
    public async Task LogoutFromJS()
    {
        await AccountService.LogoutAsync();
        Http.DefaultRequestHeaders.Authorization = null;

        if (AuthStateProvider is CustomAuthProvider custom)
        {
            custom.MarkUserAsLoggedOut();
        }

        Console.WriteLine("Logout khi thoát app.");
    }

    public void Dispose()
    {
        dotNetRef?.Dispose();
    }
}
