@using MenShopBlazor.DTOs.Collection
@using MenShopBlazor.DTOs.DiscountPrice
@using MenShopBlazor.Services.DiscountPrice
@inject ISnackbar Snackbar
@inject IDiscountPriceService DiscountPriceService
@attribute [Authorize(Roles = "Admin, RevenueManager, Factory, WarehouseManager")]
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">CẬP NHẬT CHƯƠNG TRÌNH GIẢM GIÁ</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="collectionDTO.Name"
                      Label="Tên chương trình"
                      Required="true"
                      Immediate="true"
                      For="@(() => collectionDTO.Name)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudTextField @bind-Value="collectionDTO.Description"
                      Label="Mô tả chương trình"
                      Required="true"
                      Immediate="true"
                      For="@(() => collectionDTO.Description)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudTextField @bind-Value="collectionDTO.DiscountPercent"
                      Label="Giảm giá(%)"
                      Required="true"
                      Immediate="true"
                      For="@(() => collectionDTO.DiscountPercent)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudDatePicker @bind-Date="collectionDTO.StartTime"
                       Label="Ngày bắt đầu"
                       DateFormat="dd-MM-yyyy"
                       Required="true"
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined" />

        <MudDatePicker @bind-Date="collectionDTO.EndTime"
                       Label="Ngày kết thúc"
                       DateFormat="dd-MM-yyyy"
                       Required="true"
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Update">Cập Nhật</MudButton>
        <MudButton OnClick="Cancel">Hủy</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    [Parameter] public DiscountPriceViewModel collectionDTO { get; set; }
    private CreateDiscountPriceDTO _collection = new();

    protected override async Task OnInitializedAsync()
    {
        _collection = new CreateDiscountPriceDTO
        {
            Name = collectionDTO.Name,
            Description = collectionDTO.Description,
            DiscountPercent = collectionDTO.DiscountPercent,
            StartTime = collectionDTO.StartTime,
            EndTime = collectionDTO.EndTime,
            IsActive = collectionDTO.IsActive
        };
    }
  
    private async Task Update()
    {
        if (string.IsNullOrWhiteSpace(collectionDTO.Name))
        {
            Snackbar.Add("Tên chương trình không được để trống", Severity.Warning);
            return;
        }
        if (collectionDTO.DiscountPercent == 0)
        {
            Snackbar.Add("Tỷ lệ giá giảm không được để trống", Severity.Warning);
            return;
        }
        if (collectionDTO.EndTime < collectionDTO.StartTime)
        {
            Snackbar.Add("Ngày kết thúc không được trước ngày bắt đầu", Severity.Error);
            return;
        }
        var updatedDto = new CreateDiscountPriceDTO
        {
            Name = collectionDTO.Name,
            Description = collectionDTO.Description,
            DiscountPercent = collectionDTO.DiscountPercent,
            StartTime = collectionDTO.StartTime,
            EndTime = collectionDTO.EndTime,
            IsActive = collectionDTO.IsActive
        };

        var response = await DiscountPriceService.UpdateDiscountPrice(collectionDTO.Id, updatedDto);

        if (response != null && response.IsSuccess)
        {
            Snackbar.Add("Cập nhật khuyến mãi thành công", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add("Cập nhật khuyến mãi thất bại: " + response?.Message, Severity.Error);
        }
    }


    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
