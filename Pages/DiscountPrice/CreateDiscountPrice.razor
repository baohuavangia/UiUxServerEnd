@using MenShopBlazor.DTOs.Collection
@using MenShopBlazor.DTOs.DiscountPrice
@using MenShopBlazor.Services.DiscountPrice
@inject IDiscountPriceService DiscountPriceService
@inject ISnackbar Snackbar

@attribute [Authorize(Roles = "Admin, RevenueManager, Factory, WarehouseManager")]
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">Tạo Chương trình Giảm giá</MudText>
        <MudTextField @bind-Value="createDiscountPrice.Name"
                      Label="Chương trình giảm giá"
                      Required="true"
                      Immediate="true"
                      For="@(() => createDiscountPrice.Name)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudNumericField @bind-Value="createDiscountPrice.DiscountPercent"
                      Label="Tỷ lệ giảm giá(%)"
                      Required="true"
                      Min="0"
                      Max="100"
                      Immediate="true"
                      For="@(() => createDiscountPrice.DiscountPercent)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudTextField @bind-Value="createDiscountPrice.Description"
                      Label="Mô tả chương trình"
                      Required="true"
                      Immediate="true"
                      For="@(() => createDiscountPrice.Description)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudDatePicker @bind-Date="createDiscountPrice.StartTime"
                       Label="Ngày bắt đầu"
                       DateFormat="dd-MM-yyyy"
                       Required="true"
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined" />

        <MudDatePicker @bind-Date="createDiscountPrice.EndTime"
                       Label="Ngày kết thúc"
                       DateFormat="dd-MM-yyyy"
                       Required="true"
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="CreateDiscountAsync">Thêm</MudButton>
        <MudButton OnClick="Cancel">Hủy</MudButton>
    </DialogActions>
</MudDialog>
@code {

    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    private List<DiscountPriceViewModel> discountPriceViewModels = new(); 
    private CreateDiscountPriceDTO createDiscountPrice = new()
    {
        IsActive = true
    };

    private async Task CreateDiscountAsync()
    {
        if (string.IsNullOrWhiteSpace(createDiscountPrice.Name))
        {
            Snackbar.Add("Chương trình giảm giá không được để trống", Severity.Warning);
            return;
        }
        if (createDiscountPrice.DiscountPercent == 0)
        {
            Snackbar.Add("Vui lòng nhập tỉ lệ giảm giá", Severity.Warning);
            return;
        }
        if (createDiscountPrice.EndTime < createDiscountPrice.StartTime)
        {
            Snackbar.Add("Ngày kết thúc không được trước ngày bắt đầu", Severity.Error);
            return;
        }

        var response = await DiscountPriceService.CreateDiscountPrice(createDiscountPrice);
        if (response != null)
        {
            Snackbar.Add($"Đã tạo chương trình thành công {response.Message}", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add($"Tạo chương trình thất bại {response.Message}", Severity.Error);
        }
    }
    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
