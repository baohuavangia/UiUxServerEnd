@using MenShopBlazor.Services.Fabric
@using MenShopBlazor.DTOs.Fabric
@using MenShopBlazor.Shared
@inject IFabricService FabricService
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@attribute [Authorize(Roles = "Admin, RevenueManager, Factory, WarehouseManager")]
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">CẬP NHẬT CHẤT LIỆU</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="Fabric.Name"
                      Label="Tên chất liệu"
                      Required="true"
                      Immediate="true"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="@Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" OnClick="@Update">Cập nhật</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public FabricDTO Fabric { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        Fabric = await FabricService.GetFadricId(Fabric.FabricId);
    }

    private async Task Update()
    {
        if (string.IsNullOrWhiteSpace(Fabric.Name))
        {
            Snackbar.Add("Tên chất liệu không được để trống", Severity.Warning);
            return;
        }

        var response = await FabricService.UpdateFabric(Fabric);

        if (response != null && response.IsSuccess)
        {
            Snackbar.Add("Cập nhật tên chất liệu thành công", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add("Cập nhật chất liệu thất bại: " + response?.Message, Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
