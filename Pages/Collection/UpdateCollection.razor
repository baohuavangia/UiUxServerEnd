@using MenShopBlazor.DTOs.Collection
@using MenShopBlazor.DTOs.Collection.ViewModel
@using MenShopBlazor.DTOs.Collection.CreateandUpdate
@using MenShopBlazor.Services.Collection
@using MenShopBlazor.Services.CollectionService
@inject ISnackbar Snackbar
@inject ICollectionService CollectionService
@attribute [Authorize(Roles = "Admin, RevenueManager, Factory, WarehouseManager")]
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">CẬP NHẬT BỘ SƯU TẬP</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="collectionDTOs.CollectionName"
                      Label="Tên bộ sưu tập"
                      Required="true"
                      Immediate="true"
                      For="@(() => collectionDTOs.CollectionName)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudTextField @bind-Value="collectionDTOs.Description"
                      Label="Mô tả"
                      Required="true"
                      Immediate="true"
                      For="@(() => collectionDTOs.Description)"
                      Margin="Margin.Dense"
                      Variant="Variant.Outlined" />
        <MudDatePicker @bind-Date="collectionDTOs.StartTime"
                       Label="Ngày bắt đầu"
                       DateFormat="dd-MM-yyyy"
                       Required="true"
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined" />

        <MudDatePicker @bind-Date="collectionDTOs.EndTime"
                       Label="Ngày kết thúc"
                       DateFormat="dd-MM-yyyy"
                       Required="true"
                       Margin="Margin.Dense"
                       Variant="Variant.Outlined" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Update">Cập Nhật</MudButton>
        <MudButton OnClick="Cancel">Hủy</MudButton>
    </DialogActions>
</MudDialog>
@code {

    [CascadingParameter] 
    private IMudDialogInstance MudDialog { get; set; }
    [Parameter] public CollectionViewModel collectionDTO { get; set; }
    private CollectionCreateDTO collectionDTOs = new();

    protected override async Task OnInitializedAsync()
    {
        collectionDTOs = new CollectionCreateDTO
        {
            CollectionName = collectionDTO.CollectionName,
            Description = collectionDTO.Description,
            StartTime = collectionDTO.StartTime,
            EndTime = collectionDTO.EndTime
        };
    }
    
    private async Task Update()
    {
        if (string.IsNullOrWhiteSpace(collectionDTO.CollectionName))
        {
            Snackbar.Add("Tên bộ sưu tập không được để trống", Severity.Warning);
            return;
        }
        if (string.IsNullOrWhiteSpace(collectionDTO.Description))
        {
            Snackbar.Add("Mô tả không được để trống", Severity.Warning);
            return;
        }
        if (collectionDTO.EndTime < collectionDTO.StartTime)
        {
            Snackbar.Add("Ngày kết thúc không được trước ngày bắt đầu", Severity.Error);
            return;
        }

        var response = await CollectionService.UpdateCollection(collectionDTO.CollectionId, collectionDTOs);

        if (response.IsSuccess)
        {
            Snackbar.Add(response.Message, Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add(response?.Message, Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
