@page "/storage-product/{storageId:int}"


@using MenShopBlazor.DTOs.Storage
@using MenShopBlazor.DTOs.Product.ViewModel
@using MenShopBlazor.Services.Storage
@inject IStorageService StorageService
@using MudBlazor
@inject NavigationManager Navigation
<MudOverlay Visible="_loading" DarkBackground="true" Fixed="true" ZIndex="1300">
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
</MudOverlay>
@if (!_loading)
{
    <MudContainer Class="mt-5 px-8" MaxWidth="MaxWidth.False">
        <MudBreadcrumbs Items="_items"></MudBreadcrumbs>

        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h5" Class="mb-4">DANH SÁCH SẢN PHẨM TRONG KHO</MudText>

                <MudDataGrid T="ProductViewModel"
                             Items="@productDetails"
                             RowsPerPage="8"
                             Dense="true"
                             Filterable="true"
                             FilterMode="DataGridFilterMode.ColumnFilterRow">

                    <Columns>
                        <PropertyColumn Property="x => x.ProductId" Title="Mã sản phẩm" />
                        <PropertyColumn Property="x => x.ProductName" Title="Tên sản phẩm" />
                        <PropertyColumn Property="x => x.Status" Title="Trạng thái">
                            <CellTemplate>
                                @(context.Item.Status ? "Kích hoạt" : "Vô hiệu hóa")
                            </CellTemplate>
                        </PropertyColumn>
                        <TemplateColumn Title="TÙY CHỈNH" TextAlign="DataGridColumnAlign.Right">
                            <CellTemplate>
                                <MudStack Row>
                                    <MudButton StartIcon="@Icons.Material.Filled.DataSaverOn"
                                               Size="Size.Small"
                                               Color="Color.Tertiary"
                                               Class="ml-2"
                                               OnClick="@(() => GoToDetailPage(context.Item.ProductId))">
                                        Chi tiết
                                    </MudButton>

                                </MudStack>
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>

                    <PagerContent>
                        <MudDataGridPager T="ProductDetailViewModel" />
                    </PagerContent>
                </MudDataGrid>
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    [Parameter] public int storageId { get; set; }
    private List<ProductViewModel> productDetails = new();
    private List<BreadcrumbItem> _items = new();
    private bool _loading = false;
    protected override async Task OnInitializedAsync()
    {
        _items = new()
        {
            new BreadcrumbItem("Trang chủ", href: "/", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Kho Hàng", href: "/list-storage", icon: Icons.Material.Filled.List),
            new BreadcrumbItem($"Sản phẩm kho hàng {storageId}", href: null,disabled: true, icon: Icons.Material.Filled.List),
        };
        productDetails = await StorageService.GetByProductId(storageId);

    }
    private void GoToDetailPage(int productId)
    {
        Navigation.NavigateTo($"/storage-product/{storageId}/ProductDetail/{productId}");
    }
}